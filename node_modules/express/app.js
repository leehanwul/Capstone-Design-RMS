var express = require('express');
var app = express();
var router = express.Router();
var bodyParser = require('body-parser');
//var gcm = require('node-gcm');

var server_api_key ='AIzaSyCulSpqzAvyhYy8W5YNRODM1jqelVU9qTE';

app.use(bodyParser.urlencoded({extended:true}));
app.use(bodyParser.json());

//MySQL load
var mysql = require('mysql');
var pool = mysql.createPool({
	connectionLimit: 200,
	host: 'localhost',
	user: 'root',
	password: 'tiger',
	database: 'test'
});

app.get('/', function (req, res){
	console.log('main page');
	res.send('Hello world');
});

app.post('/signup', function (req, res){
	req.accepts('application/json');
	console.log('hi client. I am signup url');
	pool.getConnection(function (err, connection) {
		console.log('signup db');
		var id = req.body.id;
		var password = req.body.password;
		var name = req.body.name;
		var token = req.body.token;
		//var isAdmin = req.body.isAdmin;
		var sqlSignUp = "INSERT INTO userInfo VALUES(?,?,?,'no',?)";
		console.log("sign up id : "+id);
		console.log("sign up password : "+password);
		console.log("sign up name : "+name);
		console.log("sign up token : "+token);
		connection.query(sqlSignUp, [id, password, name, token], function (err, result) {
			if (err){
				console.error("err : " +err);
			}
			else {
				console.log(result);
				res.json('"result": "fail"');
			}
		});
	});		
});

app.post('/login', function (req, res){
	req.accepts('application/json');
	console.log('hi clident. I am login url');
	pool.getConnection(function (err, connection) {
		var id = req.body.id;
		var password = req.body.password;
		var sqlLogin = "SELECT * FROM userInfo WHERE id=? AND password=?"; 
		console.log(id);
		console.log(password);
		connection.query(sqlLogin, [id, password], function (err, rows) {
			if (err){
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			if(rows == ''){
				console.log('login fail');
				res.send('fail');
			}
			else {
				console.log('login success');
				res.send('ok');
			} 
		});	
	});
});

app.post('/view', function (req, res){
	req.accepts('aplication/json');
	pool.getConnection(function (err, connection) {
		var building = req.body.building;
		var floor = req.body.floor;
		console.log("building : "+building);
		console.log("floor : "+floor);
		var sqlView = "SELECT state FROM restroomInfo WHERE building=? AND floor=?";
		connection.query(sqlView, [building, floor], function (err, rows) {
			if (err) {
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			if(rows == ''){
				res.send('fail');
			}
			else {
				res.send(JSON.stringify(rows));
			}
		});	
	});
});

app.post('/updateUse', function (req, res){
	req.accepts('application/json');
	console.log('hi raspberrypi! i am updateUse url on amazon web server');
	pool.getConnection(function (err, connection) {
		var no = req.body.no;
		var flag = req.body.flag;
		console.log("no : "+no);
		console.log("flag : "+flag);
		var sqlUpdateUse;
		if (flag == 0) {
			sqlUpdateUse = "UPDATE restroomInfo SET state=2 WHERE no=?";
		}
		else {
			sqlUpdateUse = "UPDATE restroomInfo SET state=1 WHERE no=?";
		}
		connection.query(sqlUpdateUse, [no], function (err, rows) {
			if (err) {
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			res.send('success');
		});
	});
});

app.post('/updateBlock', function (req, res){
	req.accepts('application/json');
	console.log('hi raspberrypi! i am updateBlock url on amazon web server');
	var no = req.body.no;
	var flag = req.body.flag;
	console.log("no : " +no);
	console.log("flag : " +flag);
	pool.getConnection(function (err, connection) {
		var registrationIds = [];
		var sqlSelectToken = "SELECT reg_id FROM userInfo WHERE isAdmin='yes'";
		var sqlUpdateBlock;
		var sqlSelectBlock = "SELECT building, floor FROM restroomInfo WHERE no=?";
		connection.query(sqlSelectToken, function (err, rows) {
			if (err) {
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			for (var i in rows) {
				var rid = rows[i].reg_id;
				console.log('rid : ' +rid);
				rid = rid.replace(/(\s*)/g,"");
				registrationIds.push(rid);
			}	
		});
		connection.query(sqlSelectBlock, [no], function (err, rows) {	
			console.log('registrationIds : ' +registrationIds);
			for (var i in registrationIds) {
				console.log('registrationIds['+i+'] : ' +registrationIds[i]);
			}
			if (err) {
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			tmpStr = "Warning! Toilet located in " +rows[0].building+ " hall " +rows[0].floor+ " floor No." +no+ " is blocked";
			console.log('tmpStr : ' +tmpStr);
			var gcm = require('node-gcm');
			var message = new gcm.Message({
				collapseKey: 'RMS',
				delayWhileIdle: false,
				timeToLive: 3,
				data: {
					title:"GCM Notification",
					message:tmpStr
				}
			});
			var sender = new gcm.Sender(server_api_key);
			sender.send(message, registrationIds, 4, function (err, result) {
				console.log('message : ' +message);
				console.log('sending to android gcm...');
				if (err) {
					console.error("err : " +err);
				}
				else {
					console.log("result : " +result);
				}
			});
		});

		if (flag == 0) {
			sqlUpdateBlock = "UPDATE restroomInfo SET state=3 WHERE no=?";
		}
		else {
			sqlUpdateBlock = "UPDATE restroomInfo SET state=1, flag=0 WHERE no=?";
		}

		connection.query(sqlUpdateBlock, [no], function (err, rows) {
			if (err) {
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			res.send('success');
		});
	});
});

app.get('/checkAlarm', function (req, res){
	req.accepts('application/json');
	pool.getConnection(function (err, connection) {
		var sqlCheckAlarm = "SELECT * FROM restroomInfo WHERE state=3 AND flag=0";
		var sqlUpdateFlag = "UPDATE restroomInfo SET flag=1 WHERE state=3";
		connection.query(sqlCheckAlarm, function (err, rows) {
			if (err) {
				console.error("err : " +err);
			}
			console.log("rows : " +JSON.stringify(rows));
			res.json(rows);
		});
		connection.query(sqlUpdateFlag, function (err, rows) {
			if (err) {
				console.error("err : " +err);
			}
		});
	});
});

app.listen(3000, function(){
	console.log("Connected 3000 port");
});
